{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailReducer } from '../reducers/productListReducer';\nimport { cartReducer } from '../reducers/cartReducer';\nimport { userDetailReducer, userReducer, userRegisterReducer, userUpdateProfileReducer } from '../reducers/userReducer';\nimport { orderCreateReducer, orderDetailsReducer } from '../reducers/orderReducer';\nvar reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailReducer,\n  cart: cartReducer,\n  userLogin: userReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n});\nvar cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nvar userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nvar shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nvar initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n  userDetails: {\n    user: userInfoFromStorage\n  },\n  userUpdateProfile: {\n    success: userInfoFromStorage\n  }\n};\nvar middleware = [thunk];\nvar store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailReducer","cartReducer","userDetailReducer","userReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","user","success","middleware","store"],"sources":["C:/Users/User/Desktop/maintffproject/Team-32-Repo/frontend/src/components/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux' \r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {productListReducer, productDetailReducer} from '../reducers/productListReducer'\r\nimport { cartReducer } from '../reducers/cartReducer'\r\nimport { userDetailReducer, userReducer, userRegisterReducer, userUpdateProfileReducer } from '../reducers/userReducer'\r\nimport { orderCreateReducer, orderDetailsReducer } from '../reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailReducer,\r\n    cart: cartReducer,\r\n    userLogin: userReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer\r\n\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n    ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n    : {}\r\n    \r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n    userDetails: { user: userInfoFromStorage },\r\n    userUpdateProfile: {success: userInfoFromStorage}\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAAQC,kBAAkB,EAAEC,oBAAoB,QAAO,gCAAgC;AACvF,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,iBAAiB,EAAEC,WAAW,EAAEC,mBAAmB,EAAEC,wBAAwB,QAAQ,yBAAyB;AACvH,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,0BAA0B;AAElF,IAAMC,OAAO,GAAGb,eAAe,CAAC;EAC5Bc,WAAW,EAAEV,kBAAkB;EAC/BW,cAAc,EAAEV,oBAAoB;EACpCW,IAAI,EAAEV,WAAW;EACjBW,SAAS,EAAET,WAAW;EACtBU,YAAY,EAAET,mBAAmB;EACjCU,WAAW,EAAEZ,iBAAiB;EAC9Ba,iBAAiB,EAAEV,wBAAwB;EAC3CW,WAAW,EAAEV,kBAAkB;EAC/BW,YAAY,EAAEV;AAElB,CAAC,CAAC;AAGF,IAAMW,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAER,IAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACtDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAEV,IAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACpEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;AAGR,IAAMK,YAAY,GAAG;EACjBd,IAAI,EAAE;IACFe,SAAS,EAAER,oBAAoB;IAC/BS,eAAe,EAAEH;EACrB,CAAC;EACDZ,SAAS,EAAE;IAAEgB,QAAQ,EAAEL;EAAoB,CAAC;EAC5CT,WAAW,EAAE;IAAEe,IAAI,EAAEN;EAAoB,CAAC;EAC1CR,iBAAiB,EAAE;IAACe,OAAO,EAAEP;EAAmB;AACpD,CAAC;AACD,IAAMQ,UAAU,GAAG,CAAClC,KAAK,CAAC;AAE1B,IAAMmC,KAAK,GAAGtC,WAAW,CAACc,OAAO,EAAEiB,YAAY,EAAE3B,mBAAmB,CAACF,eAAe,eAAImC,UAAU,CAAC,CAAC,CAAC;AAErG,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}